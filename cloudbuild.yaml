steps:
  #
  # Build KMS auth wrappers
  #
  # Build auth wrapped git
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--target=git-kms',
      '--build-arg=SSH_KEY_PATH=kms://projects/connectedcars-staging/locations/global/keyRings/cloudbuilder/cryptoKeys/ssh-key/cryptoKeyVersions/3',
      '--tag=gcr.io/$PROJECT_ID/$REPO_NAME-git.$BRANCH_NAME:$COMMIT_SHA', 
      '--tag=gcr.io/$PROJECT_ID/$REPO_NAME-git.$BRANCH_NAME:latest', 
      '.'
      ]
  # Test auth wrapped git using KSM key
  - name: 'gcr.io/$PROJECT_ID/$REPO_NAME-git.$BRANCH_NAME:$COMMIT_SHA'
    args: ['clone', 'git@github.com:connectedcars/private-module.git']
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args: ['-c', 'rm -rf private-module']
  #
  # Build embedded key auth wrappers
  #
  # Copy build key to workspace
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
            'cp',
            'gs://connectedcars-staging-cloudbuilder-private/build.pem',
            './build.pem'
          ]
  # Build auth wrapper git image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '--target=git-local',
      '--tag=gcr.io/$PROJECT_ID/$REPO_NAME-git-local.$BRANCH_NAME:$COMMIT_SHA', 
      '--tag=gcr.io/$PROJECT_ID/$REPO_NAME-git-local.$BRANCH_NAME:latest', '.'
      ]
  # Test auth wrapped git using local key
  - name: 'gcr.io/$PROJECT_ID/$REPO_NAME-git.$BRANCH_NAME:$COMMIT_SHA'
    args: ['clone', 'git@github.com:connectedcars/private-module.git']
    secretEnv:
      - 'SSH_KEY_PASSWORD'
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args: ['-c', 'rm -rf private-module']
secrets:
- kmsKeyName: projects/connectedcars-staging/locations/global/keyRings/cloudbuilder/cryptoKeys/connectedcars-builder
  secretEnv:
    SSH_KEY_PASSWORD: CiQAg7wCPfO2Tf9mtZoFWjAtX7whQ481af3gyGdM9WNK26B74UkSUQBefMgeHNh0KTsGybKReXDsFcbmed7f5sw97zSe9cswpKogENM5Ye0jiIu6NfebUpCnmJ9HVHmD/yBknlW4nn1VXBs7HYGiBSFZ52i2HyEopw==
images: [
  'gcr.io/$PROJECT_ID/$REPO_NAME-git.$BRANCH_NAME',
  'gcr.io/$PROJECT_ID/$REPO_NAME-git-local.$BRANCH_NAME'
]
